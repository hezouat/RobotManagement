buildscript {
	ext {
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'


repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.flywaydb:flyway-core')
	compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1")
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('io.springfox:springfox-swagger2:2.7.0')
	compile('io.springfox:springfox-swagger-ui:2.7.0')
	compile('com.h2database:h2')
	testCompile('com.h2database:h2')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//testCompile('org.springframework.security:spring-security-test')
}


node {
	version = "7.3.0"
	download = true
	nodeModulesDir = file("frontend")
}

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
	group = 'build'
	description = 'Compile client side folder for development'
	args = ['run','buildDev']
}
task buildClient(type:NpmTask, dependsOn:'npmInstall') {
	group = 'build'
	description = "Compile client side folder for production"
	args = ['run','build']
}
task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall') {
	group = 'application'
	description = "Build and watches the client side assets for rebuilding"
	args = ['run','buildWatch']
}

task buildStart(type: NpmTask, dependsOn: 'npmInstall') {
	group = 'application'
	description = "Build and watches the client side assets for rebuilding"
	args = ['run','start']
}

bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)

